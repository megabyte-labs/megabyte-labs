{"file":"prismic-image-7f53541f.js","mappings":"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","names":[],"sources":["../stencil-docusaurus-lib/src/components/prismic-image/prismic-image.tsx"],"sourcesContent":["import { Component, Element, Prop, h } from '@stencil/core'\n\n@Component({\n  tag: 'prismic-image'\n})\nexport class PrismicImage {\n  @Prop() image\n  @Prop() defaults: any\n  @Prop() params\n  @Prop() height: number | string\n  @Prop() width: number | string\n  @Prop() loading: 'eager' | 'lazy' = 'lazy'\n  @Prop() alt: string\n  @Prop() class: string\n  __rest\n\n  @Element() el\n\n  render() {\n    // This was copied from ionic-ds-no-fonts after it was compiled which is not available on GitHub. Not sure\n    // how they are getting the data but this code seems to work. Wasn't sure what to make of it.\n    const __rest = (this && this.__rest) || function (s, e) {\n      var t = {}\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p]\n      if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        // @ts-ignore\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n            t[p[i]] = s[p[i]]\n        }\n      return t\n    }\n    // @ts-ignore\n    var { image, params } = this.image, props = __rest(this.image, [\"image\", \"params\"])\n    const regex = new RegExp(this.defaults.homepage, \"gi\")\n    const strippedUrl = props.url.replace(regex, '')\n    const webpSrc = strippedUrl.replace(/.png/gi, '.webp')\n    const webpSrc2x = strippedUrl.replace(/.png/gi, '-2x.webp')\n    const pngSrc2x = strippedUrl.replace(/.png/gi, '-2x.png')\n    const imgSrcSet = strippedUrl + ' 1x, ' + pngSrc2x + ' 2x'\n    if (strippedUrl.match(/-1x.png$/gi)) {\n      return (\n        <picture>\n          <source type=\"image/webp\" src={webpSrc} />\n          <source type=\"image/png\" src={strippedUrl} />\n          <img src={strippedUrl} alt={props.alt} width={this.width} height={this.height} class={this.class} loading={this.loading} />\n        </picture>\n      )\n    } else {\n      return (\n        <picture>\n          <source type=\"image/webp\" src={webpSrc + ' 1x'} />\n          <source type=\"image/webp\" src={webpSrc2x + ' 2x'} />\n          <source type=\"image/png\" src={props.url + ' 1x'} />\n          <source type=\"image/png\" src={pngSrc2x + ' 2x'} />\n          <img src={strippedUrl} alt={props.alt} width={this.width} height={this.height} class={this.class} loading={this.loading} srcset={imgSrcSet} />\n        </picture>\n      )\n    }\n  }\n}\n"],"version":3}