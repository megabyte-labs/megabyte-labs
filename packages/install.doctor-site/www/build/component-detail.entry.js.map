{"file":"component-detail.entry.esm.js","mappings":";;;;;;;;;;;;;;;;;;;;;;MAMa,eAAe;;;;EAC1B,MAAM;;IAEJ,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,EAAE,WAAW,CAAC,CAAC;IAChF,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACvE,IAAI,OAAO,GAAG,IAAI,CAAC;IACnB,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;MACxB,IAAI,GAAG,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE;QACtC,OAAO,GAAG,GAAG,CAAC;OACf;KACF;IACD,OAAO;MACL,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,IAAI,CAAC,aAAa,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,EACvF,iBAAiB,EACjB,QAAQ,CAAC,OAAO,CAAC,KAAK,EACtB,OAAO,CAAC;MACV,CAAC,CAAC,OAAO,EAAE,IAAI,EACb,QAAQ,CAAC,OAAO,CAAC,KAAK,EACtB,KAAK,EACL,mBAAmB,CAAC,OAAO,CAAC,CAAC;MAC/B,CAAC,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE,EACjC,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;MAC/C,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC;MACb,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;KAChF,CAAC;GACH;;;;;;","names":[],"sources":["../../node_modules/ionic-ds-no-fonts/dist/collection/docs/component-detail/component-detail.js"],"sourcesContent":["import { Component, h, Prop } from '@stencil/core';\nimport { Heading } from '../../core';\nimport { href } from 'stencil-router-v2';\nimport coreExamples from '../../core/examples';\nimport webExamples from '../../web/examples';\nimport { transformMethodName, dashToCamel } from '../utilities';\nexport class ComponentDetail {\n  render() {\n    // return <Heading>ComponentDetail: {this.component}</Heading>\n    const exampleList = Object.assign(Object.assign({}, coreExamples), webExamples);\n    const examples = exampleList[`${dashToCamel(this.component)}Examples`];\n    let example = null;\n    for (let key in examples) {\n      if (key.toLowerCase() === this.example) {\n        example = key;\n      }\n    }\n    return [\n      h(\"a\", Object.assign({ class: \"back-link\" }, href(`/overview/${examples.default.title}`)),\n        \"\\u2190 Back to \",\n        examples.default.title,\n        \" List\"),\n      h(Heading, null,\n        examples.default.title,\n        \" / \",\n        transformMethodName(example)),\n      h(\"code\", { class: \"example-code\" },\n        h(\"pre\", null, examples[example].toString())),\n      h(\"hr\", null),\n      h(\"div\", { class: \"demo-container\" }, examples[example] && examples[example]())\n    ];\n  }\n  static get is() { return \"component-detail\"; }\n  static get styles() { return \".back-link {\\n      margin-bottom: var(--space-6);\\n      display: block;\\n    }\\n    .example-code {\\n      background: var(--c-indigo-20);\\n      display: inline-block;\\n      padding: 0 var(--space-6);\\n      margin: var(--space-6) 0;\\n    }\"; }\n  static get properties() { return {\n    \"component\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"string\",\n        \"resolved\": \"string\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"component\",\n      \"reflect\": false\n    },\n    \"example\": {\n      \"type\": \"string\",\n      \"mutable\": false,\n      \"complexType\": {\n        \"original\": \"string\",\n        \"resolved\": \"string\",\n        \"references\": {}\n      },\n      \"required\": false,\n      \"optional\": false,\n      \"docs\": {\n        \"tags\": [],\n        \"text\": \"\"\n      },\n      \"attribute\": \"example\",\n      \"reflect\": false\n    }\n  }; }\n}\n// const hFunctionToJsx = (func: ()=>{}) => {\n//   if (typeof func !== 'function') return;\n//   // there has _got_ to be a better way, but this works...\n//   let str = func.toString();\n//   // console.log(str);\n//   str = str.replace('() => h(', '').slice(0, -1);\n//   const element = str.split(', ')[0].replace(/\\\"/g,'')\n//   let propStr = '';\n//   str.substring(\n//     str.lastIndexOf('{ ') + 2, \n//     str.lastIndexOf(' }')\n//   ).split(', ')\n//   .forEach(prop => {\n//     const [key, val] = prop.split(': ');\n//     propStr += ` ${key.replace(/\\\"/g,'')}={${val}}`;\n//   });\n//   const child = str.lastIndexOf('}, \"') > 1 ? \n//     str.substring(str.lastIndexOf('}, \"') + 4).slice(0, -1): '';\n//   // console.log(str);\n//   return `<${element}${propStr}>${child}</${element}>`;\n// }\n"],"version":3}