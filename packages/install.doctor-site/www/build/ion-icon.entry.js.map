{"file":"ion-icon.entry.esm.js","mappings":"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","names":[],"sources":["../../node_modules/ionicons/dist/collection/components/icon/utils.js","../../node_modules/ionicons/dist/collection/components/icon/validate.js","../../node_modules/ionicons/dist/collection/components/icon/request.js","../../node_modules/ionicons/dist/collection/components/icon/icon.css?tag=ion-icon&encapsulation=shadow","../../node_modules/ionicons/dist/collection/components/icon/icon.js"],"sourcesContent":["import { getAssetPath } from '@stencil/core';\nlet CACHED_MAP;\nexport const getIconMap = () => {\n    if (typeof window === 'undefined') {\n        return new Map();\n    }\n    else {\n        if (!CACHED_MAP) {\n            const win = window;\n            win.Ionicons = win.Ionicons || {};\n            CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n        }\n        return CACHED_MAP;\n    }\n};\nexport const addIcons = (icons) => {\n    const map = getIconMap();\n    Object.keys(icons).forEach(name => map.set(name, icons[name]));\n};\nexport const getUrl = (i) => {\n    let url = getSrc(i.src);\n    if (url) {\n        return url;\n    }\n    url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n    if (url) {\n        return getNamedUrl(url);\n    }\n    if (i.icon) {\n        url = getSrc(i.icon);\n        if (url) {\n            return url;\n        }\n        url = getSrc(i.icon[i.mode]);\n        if (url) {\n            return url;\n        }\n    }\n    return null;\n};\nconst getNamedUrl = (iconName) => {\n    const url = getIconMap().get(iconName);\n    if (url) {\n        return url;\n    }\n    return getAssetPath(`svg/${iconName}.svg`);\n};\nexport const getName = (iconName, icon, mode, ios, md) => {\n    // default to \"md\" if somehow the mode wasn't set\n    mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n    // if an icon was passed in using the ios or md attributes\n    // set the iconName to whatever was passed in\n    if (ios && mode === 'ios') {\n        iconName = toLower(ios);\n    }\n    else if (md && mode === 'md') {\n        iconName = toLower(md);\n    }\n    else {\n        if (!iconName && icon && !isSrc(icon)) {\n            iconName = icon;\n        }\n        if (isStr(iconName)) {\n            iconName = toLower(iconName);\n        }\n    }\n    if (!isStr(iconName) || iconName.trim() === '') {\n        return null;\n    }\n    // only allow alpha characters and dash\n    const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n    if (invalidChars !== '') {\n        return null;\n    }\n    return iconName;\n};\nexport const getSrc = (src) => {\n    if (isStr(src)) {\n        src = src.trim();\n        if (isSrc(src)) {\n            return src;\n        }\n    }\n    return null;\n};\nexport const isSrc = (str) => str.length > 0 && /(\\/|\\.)/.test(str);\nexport const isStr = (val) => typeof val === 'string';\nexport const toLower = (val) => val.toLowerCase();\n","import { isStr } from './utils';\nexport const validateContent = (svgContent) => {\n    const div = document.createElement('div');\n    div.innerHTML = svgContent;\n    // setup this way to ensure it works on our buddy IE\n    for (let i = div.childNodes.length - 1; i >= 0; i--) {\n        if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n            div.removeChild(div.childNodes[i]);\n        }\n    }\n    // must only have 1 root element\n    const svgElm = div.firstElementChild;\n    if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n        const svgClass = svgElm.getAttribute('class') || '';\n        svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n        // root element must be an svg\n        // lets double check we've got valid elements\n        // do not allow scripts\n        if (isValid(svgElm)) {\n            return div.innerHTML;\n        }\n    }\n    return '';\n};\nexport const isValid = (elm) => {\n    if (elm.nodeType === 1) {\n        if (elm.nodeName.toLowerCase() === 'script') {\n            return false;\n        }\n        for (let i = 0; i < elm.attributes.length; i++) {\n            const val = elm.attributes[i].value;\n            if (isStr(val) && val.toLowerCase().indexOf('on') === 0) {\n                return false;\n            }\n        }\n        for (let i = 0; i < elm.childNodes.length; i++) {\n            if (!isValid(elm.childNodes[i])) {\n                return false;\n            }\n        }\n    }\n    return true;\n};\n","import { validateContent } from './validate';\nexport const ioniconContent = new Map();\nconst requests = new Map();\nexport const getSvgContent = (url, sanitize) => {\n    // see if we already have a request for this url\n    let req = requests.get(url);\n    if (!req) {\n        if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n            // we don't already have a request\n            req = fetch(url).then((rsp) => {\n                if (rsp.ok) {\n                    return rsp.text().then((svgContent) => {\n                        if (svgContent && sanitize !== false) {\n                            svgContent = validateContent(svgContent);\n                        }\n                        ioniconContent.set(url, svgContent || '');\n                    });\n                }\n                ioniconContent.set(url, '');\n            });\n            // cache for the same requests\n            requests.set(url, req);\n        }\n        else {\n            // set to empty for ssr scenarios and resolve promise\n            ioniconContent.set(url, '');\n            return Promise.resolve();\n        }\n    }\n    return req;\n};\n",":host {\n  display: inline-block;\n\n  width: 1em;\n  height: 1em;\n\n  contain: strict;\n\n  fill: currentColor;\n\n  box-sizing: content-box !important;\n}\n\n:host .ionicon {\n  stroke: currentColor;\n}\n\n.ionicon-fill-none {\n  fill: none;\n}\n\n.ionicon-stroke-width {\n  stroke-width: 32px;\n  stroke-width: var(--ionicon-stroke-width, 32px);\n}\n\n.icon-inner,\n.ionicon,\nsvg {\n  display: block;\n\n  height: 100%;\n  width: 100%;\n}\n\n\n/* Icon RTL\n * -----------------------------------------------------------\n */\n\n:host(.flip-rtl) .icon-inner {\n  transform: scaleX(-1);\n}\n\n\n/* Icon Sizes\n * -----------------------------------------------------------\n */\n\n:host(.icon-small) {\n  font-size: 18px !important;\n}\n\n:host(.icon-large){\n  font-size: 32px !important;\n}\n\n\n/* Icon Colors\n * -----------------------------------------------------------\n */\n\n:host(.ion-color) {\n  color: var(--ion-color-base) !important;\n}\n\n:host(.ion-color-primary) {\n  --ion-color-base: var(--ion-color-primary, #3880ff);\n}\n\n:host(.ion-color-secondary) {\n  --ion-color-base: var(--ion-color-secondary, #0cd1e8);\n}\n\n:host(.ion-color-tertiary) {\n  --ion-color-base: var(--ion-color-tertiary, #f4a942);\n}\n\n:host(.ion-color-success) {\n  --ion-color-base: var(--ion-color-success, #10dc60);\n}\n\n:host(.ion-color-warning) {\n  --ion-color-base: var(--ion-color-warning, #ffce00);\n}\n\n:host(.ion-color-danger) {\n  --ion-color-base: var(--ion-color-danger, #f14141);\n}\n\n:host(.ion-color-light) {\n  --ion-color-base: var(--ion-color-light, #f4f5f8);\n}\n\n:host(.ion-color-medium) {\n  --ion-color-base: var(--ion-color-medium, #989aa2);\n}\n\n:host(.ion-color-dark) {\n  --ion-color-base: var(--ion-color-dark, #222428);\n}\n","import { Build, Component, Element, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { getSvgContent, ioniconContent } from './request';\nimport { getName, getUrl } from './utils';\nexport class Icon {\n    constructor() {\n        this.isVisible = false;\n        /**\n         * The mode determines which platform styles to use.\n         */\n        this.mode = getIonMode();\n        /**\n         * If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\n         * Default, `false`.\n         */\n        this.lazy = false;\n        /**\n         * When set to `false`, SVG content that is HTTP fetched will not be checked\n         * if the response SVG content has any `<script>` elements, or any attributes\n         * that start with `on`, such as `onclick`.\n         * @default true\n         */\n        this.sanitize = true;\n    }\n    connectedCallback() {\n        // purposely do not return the promise here because loading\n        // the svg file should not hold up loading the app\n        // only load the svg if it's visible\n        this.waitUntilVisible(this.el, '50px', () => {\n            this.isVisible = true;\n            this.loadIcon();\n        });\n    }\n    disconnectedCallback() {\n        if (this.io) {\n            this.io.disconnect();\n            this.io = undefined;\n        }\n    }\n    waitUntilVisible(el, rootMargin, cb) {\n        if (Build.isBrowser && this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n            const io = (this.io = new window.IntersectionObserver((data) => {\n                if (data[0].isIntersecting) {\n                    io.disconnect();\n                    this.io = undefined;\n                    cb();\n                }\n            }, { rootMargin }));\n            io.observe(el);\n        }\n        else {\n            // browser doesn't support IntersectionObserver\n            // so just fallback to always show it\n            cb();\n        }\n    }\n    loadIcon() {\n        if (Build.isBrowser && this.isVisible) {\n            const url = getUrl(this);\n            if (url) {\n                if (ioniconContent.has(url)) {\n                    // sync if it's already loaded\n                    this.svgContent = ioniconContent.get(url);\n                }\n                else {\n                    // async if it hasn't been loaded\n                    getSvgContent(url, this.sanitize).then(() => (this.svgContent = ioniconContent.get(url)));\n                }\n            }\n        }\n        if (!this.ariaLabel && this.ariaHidden !== 'true') {\n            const label = getName(this.name, this.icon, this.mode, this.ios, this.md);\n            // user did not provide a label\n            // come up with the label based on the icon name\n            if (label) {\n                this.ariaLabel = label.replace(/\\-/g, ' ');\n            }\n        }\n    }\n    render() {\n        const mode = this.mode || 'md';\n        const flipRtl = this.flipRtl ||\n            (this.ariaLabel &&\n                (this.ariaLabel.indexOf('arrow') > -1 || this.ariaLabel.indexOf('chevron') > -1) &&\n                this.flipRtl !== false);\n        return (h(Host, { role: \"img\", class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(this.color)), { [`icon-${this.size}`]: !!this.size, 'flip-rtl': !!flipRtl && this.el.ownerDocument.dir === 'rtl' }) }, Build.isBrowser && this.svgContent ? (h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })) : (h(\"div\", { class: \"icon-inner\" }))));\n    }\n    static get is() { return \"ion-icon\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() { return {\n        \"$\": [\"icon.css\"]\n    }; }\n    static get styleUrls() { return {\n        \"$\": [\"icon.css\"]\n    }; }\n    static get assetsDirs() { return [\"svg\"]; }\n    static get properties() { return {\n        \"mode\": {\n            \"type\": \"string\",\n            \"mutable\": true,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"The mode determines which platform styles to use.\"\n            },\n            \"attribute\": \"mode\",\n            \"reflect\": false,\n            \"defaultValue\": \"getIonMode()\"\n        },\n        \"color\": {\n            \"type\": \"string\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string | undefined\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"The color to use for the background of the item.\"\n            },\n            \"attribute\": \"color\",\n            \"reflect\": false\n        },\n        \"ariaLabel\": {\n            \"type\": \"string\",\n            \"mutable\": true,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string | undefined\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"Specifies the label to use for accessibility. Defaults to the icon name.\"\n            },\n            \"attribute\": \"aria-label\",\n            \"reflect\": true\n        },\n        \"ariaHidden\": {\n            \"type\": \"string\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string | undefined\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"Set the icon to hidden, respectively `true`, to remove it from the accessibility tree.\"\n            },\n            \"attribute\": \"aria-hidden\",\n            \"reflect\": true\n        },\n        \"ios\": {\n            \"type\": \"string\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string | undefined\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"Specifies which icon to use on `ios` mode.\"\n            },\n            \"attribute\": \"ios\",\n            \"reflect\": false\n        },\n        \"md\": {\n            \"type\": \"string\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string | undefined\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"Specifies which icon to use on `md` mode.\"\n            },\n            \"attribute\": \"md\",\n            \"reflect\": false\n        },\n        \"flipRtl\": {\n            \"type\": \"boolean\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"boolean\",\n                \"resolved\": \"boolean | undefined\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"Specifies whether the icon should horizontally flip when `dir` is `\\\"rtl\\\"`.\"\n            },\n            \"attribute\": \"flip-rtl\",\n            \"reflect\": false\n        },\n        \"name\": {\n            \"type\": \"string\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string | undefined\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"Specifies which icon to use from the built-in set of icons.\"\n            },\n            \"attribute\": \"name\",\n            \"reflect\": false\n        },\n        \"src\": {\n            \"type\": \"string\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string | undefined\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"Specifies the exact `src` of an SVG file to use.\"\n            },\n            \"attribute\": \"src\",\n            \"reflect\": false\n        },\n        \"icon\": {\n            \"type\": \"any\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"any\",\n                \"resolved\": \"any\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"A combination of both `name` and `src`. If a `src` url is detected\\nit will set the `src` property. Otherwise it assumes it's a built-in named\\nSVG and set the `name` property.\"\n            },\n            \"attribute\": \"icon\",\n            \"reflect\": false\n        },\n        \"size\": {\n            \"type\": \"string\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"string\",\n                \"resolved\": \"string | undefined\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": true,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"The size of the icon.\\nAvailable options are: `\\\"small\\\"` and `\\\"large\\\"`.\"\n            },\n            \"attribute\": \"size\",\n            \"reflect\": false\n        },\n        \"lazy\": {\n            \"type\": \"boolean\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"boolean\",\n                \"resolved\": \"boolean\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [],\n                \"text\": \"If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\\nDefault, `false`.\"\n            },\n            \"attribute\": \"lazy\",\n            \"reflect\": false,\n            \"defaultValue\": \"false\"\n        },\n        \"sanitize\": {\n            \"type\": \"boolean\",\n            \"mutable\": false,\n            \"complexType\": {\n                \"original\": \"boolean\",\n                \"resolved\": \"boolean\",\n                \"references\": {}\n            },\n            \"required\": false,\n            \"optional\": false,\n            \"docs\": {\n                \"tags\": [{\n                        \"text\": \"true\",\n                        \"name\": \"default\"\n                    }],\n                \"text\": \"When set to `false`, SVG content that is HTTP fetched will not be checked\\nif the response SVG content has any `<script>` elements, or any attributes\\nthat start with `on`, such as `onclick`.\"\n            },\n            \"attribute\": \"sanitize\",\n            \"reflect\": false,\n            \"defaultValue\": \"true\"\n        }\n    }; }\n    static get states() { return {\n        \"svgContent\": {},\n        \"isVisible\": {}\n    }; }\n    static get elementRef() { return \"el\"; }\n    static get watchers() { return [{\n            \"propName\": \"name\",\n            \"methodName\": \"loadIcon\"\n        }, {\n            \"propName\": \"src\",\n            \"methodName\": \"loadIcon\"\n        }, {\n            \"propName\": \"icon\",\n            \"methodName\": \"loadIcon\"\n        }]; }\n}\nconst getIonMode = () => (Build.isBrowser && typeof document !== 'undefined' && document.documentElement.getAttribute('mode')) || 'md';\nconst createColorClasses = (color) => {\n    return color\n        ? {\n            'ion-color': true,\n            [`ion-color-${color}`]: true,\n        }\n        : null;\n};\n"],"version":3}